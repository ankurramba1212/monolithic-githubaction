name: Github-Action-Pipeline
#app rejistration ke liye main credential ke time org , repo pull request lena padega or env bhi set kerna hoga or branch main bhi
on:
  pull_request:
    branches:
      - "main"
  push:
    branches:
      - "main"

permissions:
  id-token: write
  contents: read
  security-events: write # required for uploading SARIF (security scan) results

jobs:
  terraform_init_plan:
    runs-on: newrunner
    steps:
      - name: Checkout
        uses: actions/checkout@v5.0.0
      # create app in azureportel fill details like git id , repo name , branch(optional), permissions block dena padega # nahi to error ayega
      - name: Azure Login
        uses: Azure/login@v2.3.0
        with:
          client-id: 1c035810-e64d-42b4-b399-6973734a9302
          tenant-id: e66a3e9f-8b6b-4541-aa09-a25d0fbce6b1
          subscription-id: b43bd80e-9eef-4206-b932-7dba68f2f340

      - name: Terraform Init
        working-directory: env/preprod
        run: terraform init

      - name: Terraform fmt
        working-directory: env
        run: terraform fmt -check
        continue-on-error: true

      - name: Terraform validate
        working-directory: env/
        run: terraform validate

        # ✅ Install tfsec manually (Windows compatible)
      - name: Install tfsec
        run: |
          choco install tfsec -y || scoop install tfsec

      # ✅ Run tfsec security scan
      - name: Run tfsec security scan
        working-directory: env/preprod
        run: |
          tfsec . --format sarif --out tfsec.sarif || echo "tfsec found issues"

      # ✅ Upload tfsec SARIF results to GitHub Security tab
      - name: Upload tfsec SARIF results to GitHub Security tab
        if: always()
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: env/preprod/tfsec.sarif

      - name: Terraform Plan
        id: plan
        working-directory: env/preprod
        run: terraform plan -out=tfplan
        # Saving the plan file as an artifact to be used in the apply step
      - name: Upload Terraform Plan
        uses: actions/upload-artifact@v4
        with:
          name: tfplan
          path: env/preprod/tfplan

  terraform_apply:
    if: github.ref == 'refs/heads/main'
    environment: dev
    runs-on: newrunner
    needs: terraform_init_plan
    permissions:
      id-token: write
      contents: read
    steps:
      - name: Checkout
        uses: actions/checkout@v5.0.0

      - name: Azure Login
        uses: Azure/login@v2.3.0
        with:
          client-id: 1c035810-e64d-42b4-b399-6973734a9302
          tenant-id: e66a3e9f-8b6b-4541-aa09-a25d0fbce6b1
          subscription-id: b43bd80e-9eef-4206-b932-7dba68f2f340

      - name: Terraform Init
        working-directory: env/preprod
        run: terraform init
        #using the plan file saved as an artifact in the previous step
      - name: Download Terraform Plan
        uses: actions/download-artifact@v4
        with:
          name: tfplan
          path: env/preprod

      - name: Terraform Apply
        working-directory: env/preprod
        run: terraform apply -auto-approve tfplan
