name: Github-Action-Pipeline

on:
  pull_request:
    branches:
      - 'main'
  push:
    branches:
      - 'main'

# âœ… Global permissions (important for SARIF upload)
permissions:
  id-token: write
  contents: read
  security-events: write

jobs:
  terraform_init_plan:
    runs-on: newrunner

    steps:
      # -----------------------------
      # Step 1: Checkout repository
      # -----------------------------
      - name: Checkout
        uses: actions/checkout@v5.0.0

      # -----------------------------
      # Step 2: Azure Login
      # -----------------------------
      - name: Azure Login
        uses: Azure/login@v2.3.0
        with:
          client-id: 1c035810-e64d-42b4-b399-6973734a9302
          tenant-id: e66a3e9f-8b6b-4541-aa09-a25d0fbce6b1
          subscription-id: b43bd80e-9eef-4206-b932-7dba68f2f340

      # -----------------------------
      # Step 3: Terraform Init
      # -----------------------------
      - name: Terraform Init
        working-directory: env/preprod
        run: terraform init

      # -----------------------------
      # Step 4: Terraform FMT
      # -----------------------------
      - name: Terraform fmt
        working-directory: env/preprod
        run: terraform fmt -check
        continue-on-error: true

      # -----------------------------
      # Step 5: Terraform Validate
      # -----------------------------
      - name: Terraform validate
        working-directory: env/preprod
        run: terraform validate

      # -----------------------------
      # Step 6: Install tfsec (Windows compatible)
      # -----------------------------
      - name: Install tfsec
        run: |
          choco install tfsec -y || scoop install tfsec

      # -----------------------------
      # Step 7: Run tfsec Security Scan
      # -----------------------------
      - name: Run tfsec security scan
        working-directory: env/preprod
        run: |
          tfsec . --format sarif --out tfsec.sarif || echo "tfsec found issues"

      # -----------------------------
      # Step 8: Upload tfsec SARIF results (safe for forks)
      # -----------------------------
      - name: Upload tfsec SARIF results to GitHub Security tab
        if: ${{ github.event_name != 'pull_request' || github.event.pull_request.head.repo.fork == false }}
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: env/preprod/tfsec.sarif

      # -----------------------------
      # Step 9: Terraform Plan
      # -----------------------------
      - name: Terraform Plan
        id: plan
        working-directory: env/preprod
        run: terraform plan -out=tfplan

      # -----------------------------
      # Step 10: Upload Plan Artifact
      # -----------------------------
      - name: Upload Terraform Plan
        uses: actions/upload-artifact@v4
        with:
          name: tfplan
          path: env/preprod/tfplan

  # -------------------------------------------------------------------
  # APPLY STAGE (only runs on main)
  # -------------------------------------------------------------------
  terraform_apply:
    if: github.ref == 'refs/heads/main'
    environment: dev
    runs-on: newrunner
    needs: terraform_init_plan
    permissions:
      id-token: write
      contents: read

    steps:
      # Step 1: Checkout
      - name: Checkout
        uses: actions/checkout@v5.0.0

      # Step 2: Azure Login
      - name: Azure Login
        uses: Azure/login@v2.3.0
        with:
          client-id: 1c035810-e64d-42b4-b399-6973734a9302
          tenant-id: e66a3e9f-8b6b-4541-aa09-a25d0fbce6b1
          subscription-id: b43bd80e-9eef-4206-b932-7dba68f2f340

      # Step 3: Terraform Init
      - name: Terraform Init
        working-directory: env/preprod
        run: terraform init

      # Step 4: Download Terraform Plan Artifact
      - name: Download Terraform Plan
        uses: actions/download-artifact@v4
        with:
          name: tfplan
          path: env/preprod

      # Step 5: Terraform Apply
      - name: Terraform Apply
        working-directory: env/preprod
        run: terraform apply -auto-approve tfplan
